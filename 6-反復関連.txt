#反復の文

 #繰り返し同じ処理をする


#range

 #for i in range( □ )

 #この i をループカウンタと呼ぶ

 # i に　0〜□-1　までの値を順番に格納し、後述する命令を実行する　←　これを□回繰り返す

for i in range(6):

    print(i)

0
1
2
3
4
5

 #range(□,〇)と数を2つ指定すると □〜〇-1 の間で 〇-□ 回繰り返す

# enumurate文
 
 #リストの要素を1つ1つ取得して要素それぞれに処理を行う場合に使用する
  #ループカウンタは 0 からスタートして指定したリストの要素数-1までカウントする

  # fer idx,elem in enumerate(a): forの後ろには2つの変数が設定可能

 
 
 #変数が１つの場合

  #変数はループカウンタとなり、カウンタに対応する順番の要素が格納される

a = ["a","b","c","d"]



for b in enumerate(a):

    print(b)


print(a) 
　↓
(0, 'a')
(1, 'b')
(2, 'c')
(3, 'd')
['a', 'b', 'c', 'd']

 #変数が２つの場合

  #最初の関数がループカウンタとなる。

  #後ろの関数がカウンタに対応した要素になる。

c = ["a","b","c","d","e"]



for cnt,mtl in enumerate(c):

    print("{0} = {1}".format(cnt,mtl))
　↓
0 = a
1 = b
2 = c
3 = d
4 = e

# while文
 #「特定の条件を満たす間繰り返す」際に使用する
d = ["!","!","!","!","?","!","!"]
i = 0
while d[i] == '!':
    print("d{0} is ok".format(i))
    i = i + 1
#4番目に入っている要素が ? なので5番目以降は繰り返しの対象にならない
#上記のコードの場合 i = i + 1 部分が行が違うなどしてwhile文の中に入っていなかった場合
#無限ループになってしまうため注意

#無限ループだめ絶対


#break と continue

 #break 繰り返し処理を終了する

 #continue 今回の繰り返しを終了し次の繰り返しを開始する

i = 0
while i < 10:

    i = i + 1

    if i < 3:

        continue

    print("i is {0}".format(i))

    if i == 6:

        break

print("final i is {0}".format(i))
　↓
i is 3
i is 4
i is 5
i is 6
final i is 6

#while文でのelse

 #while文で使用した場合ループが終了した時の処理となり

 #ループが終了した際に後記の処理を行うことができる

i = 0

while i < 3:

    i = i + 1

    print("i is {0}".format(i))

else:
    print("end")